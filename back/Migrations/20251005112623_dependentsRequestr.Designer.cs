// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using back.Context;

#nullable disable

namespace back.Migrations
{
    [DbContext(typeof(NasaChallengeContextDb))]
    [Migration("20251005112623_dependentsRequestr")]
    partial class dependentsRequestr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("back.Models.Entities.DependentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Accepted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RequestedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequesterId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequesterId");

                    b.HasIndex("TargetId");

                    b.ToTable("DependentRequests");
                });

            modelBuilder.Entity("back.Models.Entities.Dependents", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Depends_on")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Depends_on");

                    b.HasIndex("UserId");

                    b.ToTable("Dependent");
                });

            modelBuilder.Entity("back.Models.Entities.RespiratoryDiseases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Disease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RespiratoryDisease");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Disease = "Asthma"
                        },
                        new
                        {
                            Id = 2,
                            Disease = "Chronic Obstructive Pulmonary Disease (COPD)"
                        },
                        new
                        {
                            Id = 3,
                            Disease = "Chronic Bronchitis"
                        },
                        new
                        {
                            Id = 4,
                            Disease = "Pulmonary Emphysema"
                        },
                        new
                        {
                            Id = 5,
                            Disease = "Allergic Rhinitis"
                        },
                        new
                        {
                            Id = 6,
                            Disease = "Sinusitis"
                        },
                        new
                        {
                            Id = 7,
                            Disease = "Laryngitis"
                        },
                        new
                        {
                            Id = 8,
                            Disease = "Pharyngitis"
                        },
                        new
                        {
                            Id = 9,
                            Disease = "Acute Bronchitis"
                        },
                        new
                        {
                            Id = 10,
                            Disease = "Pneumonia"
                        });
                });

            modelBuilder.Entity("back.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("back.Models.Entities.UserDiseases", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserDisease");
                });

            modelBuilder.Entity("back.Models.Entities.DependentRequest", b =>
                {
                    b.HasOne("back.Models.Entities.User", "Requester")
                        .WithMany()
                        .HasForeignKey("RequesterId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("back.Models.Entities.User", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Requester");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("back.Models.Entities.Dependents", b =>
                {
                    b.HasOne("back.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("Depends_on")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("back.Models.Entities.User", "DependsOn")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DependsOn");

                    b.Navigation("User");
                });

            modelBuilder.Entity("back.Models.Entities.UserDiseases", b =>
                {
                    b.HasOne("back.Models.Entities.RespiratoryDiseases", "Disease")
                        .WithMany()
                        .HasForeignKey("DiseaseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("back.Models.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Disease");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
